using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;
using System.IO;
using Model.Pacijenti;
using Bolnica.Repository.Korisnici;

namespace Bolnica.Model.Pregledi
{

    public class FileRepositorySastojak : IRepositorySastojak
<<<<<<< HEAD
       
=======
<<<<<<< HEAD:Projekat/bolnica/bolnica/Repository/Pregledi/FIleRepositorySastojak.cs
       
=======
>>>>>>> origin/feature_sekretar8:Projekat/bolnica/bolnica/Repository/Pregledi/FileRepositorySastojak.cs
>>>>>>> origin/feature_sekretar8
    {
        private string fileLocation;

        public FileRepositorySastojak()
        {
            string path = Directory.GetParent(Directory.GetCurrentDirectory()).Parent.Parent.FullName;
            fileLocation = System.IO.Path.Combine(path, @"Resources", "Sastojci.json");
        }

        public List<Sastojak> GetAll()
        {
            FileRepositoryPacijent.serializeAlergeni = true;
            var json = File.ReadAllText(fileLocation);
            var alergeni = JsonConvert.DeserializeObject<List<Sastojak>>(json);
            return alergeni;
        }

        public void Save(Sastojak noviSastojak)
        {
            FileRepositoryPacijent.serializeAlergeni = true;
            var json = File.ReadAllText(fileLocation);
            List<Sastojak> alergeni = JsonConvert.DeserializeObject<List<Sastojak>>(json);
            if (alergeni == null)
            {
                alergeni = new List<Sastojak>();
            }
            alergeni.Add(noviSastojak);
            File.WriteAllText(fileLocation, JsonConvert.SerializeObject(alergeni));
        }

        public void Delete(Sastojak sastojak)
        {
            FileRepositoryPacijent.serializeAlergeni = true;
            var json = File.ReadAllText(fileLocation);
            List<Sastojak> alergeni = JsonConvert.DeserializeObject<List<Sastojak>>(json);
            if (alergeni != null)
            {
                for (int i = 0; i < alergeni.Count; i++)
                {
                    if (alergeni[i].Id == sastojak.Id)
                    {
                        alergeni.Remove(alergeni[i]);
                        break;
                    }
                }
                File.WriteAllText(fileLocation, JsonConvert.SerializeObject(alergeni));
            }
        }

        public void Update(Sastojak entity)
        {
            FileRepositoryPacijent.serializeAlergeni = true;
            List<Sastojak> alergeni = new List<Sastojak>();
            alergeni = GetAll();

            for (int i = 0; i < alergeni.Count; i++)
            {
                if (alergeni[i].Id.Equals(entity.Id))
                {
                    alergeni[i] = entity;
                    break;
                }
            }
            File.WriteAllText(fileLocation, JsonConvert.SerializeObject(alergeni));
        }

        public Sastojak GetById(int id)
        {
            FileRepositoryPacijent.serializeAlergeni = true;
            var json = File.ReadAllText(fileLocation);
            var alergeni = JsonConvert.DeserializeObject<List<Sastojak>>(json);

            Sastojak alergen = new Sastojak();
            foreach (Sastojak a in alergeni)
                if (a.Id == id)
                    alergen = a;
            return alergen;
        }
    }
}
